services:

  mongo:
    image: mongo
    restart: always
    container_name: labeling-app-mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - ./data/mongo:/data/db
    ports:
      - 27017:27017

  # TODO: backend hot reload
  backend-app:
    image: labeling-app-backend-image
    build:
      context: backend/app
      dockerfile: Dockerfile
    container_name: labeling-app-backend
    ports:
      - 8000:80
    depends_on:
      - mongo
    secrets:
      - gcp_service_account
    environment:
      - MONGO_URL=mongodb://root:example@mongo:27017
      - GOOGLE_APPLICATION_CREDENTIALS=/run/secrets/gcp_service_account
    env_file:
      - backend/app/dev.env
    volumes:
      - ./backend/app:/app
      - /app/.venv
    # For dev env
    command: /app/.venv/bin/fastapi run main.py --port 80 --host 0.0.0.0 --reload
    develop:
      watch:
        # Sync the working directory with the `/app` directory in the container
        - action: sync
          path: .
          target: backend/app
          # Exclude the project virtual environment
          ignore:
            - .venv/

        # Rebuild the image on changes to the `pyproject.toml`
        - action: rebuild
          path: ./pyproject.toml

  model-sam:
    image: labeling-app-model-sam-image
    build:
      context: models/sam
      dockerfile: Dockerfile
    container_name: labeling-app-model-sam
    ports:
      - 8080:80
    # For dev env
    command: /app/.venv/bin/fastapi run main.py --port 80 --host 0.0.0.0 --reload
    develop:
      watch:
        # Sync the working directory with the `/app` directory in the container
        - action: sync
          path: .
          target: models/sam
          # Exclude the project virtual environment
          ignore:
            - .venv/

        # Rebuild the image on changes to the `pyproject.toml`
        - action: rebuild
          path: ./pyproject.toml

secrets:
  gcp_service_account:
    file: backend/app/gcp_service_account.json
